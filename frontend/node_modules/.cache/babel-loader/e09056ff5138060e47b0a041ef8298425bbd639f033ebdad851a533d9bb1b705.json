{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Repository\\\\QAirline\\\\frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Login.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleLogin = async () => {\n    const response = await fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    setMessage(data.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"UkS7RHHdqtHpQ+ssTj6NJz5Q4n8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","message","setMessage","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Repository/QAirline/frontend/src/components/login.js"],"sourcesContent":["// frontend/src/components/Login.js\r\nimport React, { useState } from 'react';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    const response = await fetch('http://localhost:5000/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n    const data = await response.json();\r\n    setMessage(data.message);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '100px' }}>\r\n      <h2>Login</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <br />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <br />\r\n      <button onClick={handleLogin}>Login</button>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,QAAQ;QAAEE;MAAS,CAAC;IAC7C,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCV,UAAU,CAACS,IAAI,CAACV,OAAO,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA;IAAKmB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACtDtB,OAAA;MAAAsB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE1B,QAAS;MAChB2B,QAAQ,EAAGC,CAAC,IAAK3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MACE2B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAExB,QAAS;MAChByB,QAAQ,EAAGC,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MAAQiC,OAAO,EAAExB,WAAY;MAAAa,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5C1B,OAAA;MAAAsB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCID,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}